<%-
  account    = user_data.server.cluster.provider_account
  account_id = account.id
  cluster    = user_data.server.cluster
  cluster_id = cluster.id
  server     = user_data.server
  server_id  = server.id
  
  request_path = [ account_id, cluster_id, server_id ]

  s = user_data.server
  
  lock_host = server.parameters["MYSQL_LOCK_HOST"] ||  "localhost"
  lock_user = server.parameters["MYSQL_LOCK_USER"]
  lock_pass = server.parameters["MYSQL_LOCK_PASS"]
  coordinates_file = server.parameters["MYSQL_COORDINATES_FILE"]
-%>
[general]

# what operator types are monitoring for message events (comma seperated list)
operators = [ amqp ]

# pid_dir: Where to store the Process ID file which contains the id of the process
# and is used for stoping and reloading the service
pid_dir = /var/run

# log_level: the level of information to log. see 'man 3 syslog' for list of log levels
log_level = NOTICE

agents = [ all ]

[agents]
    execute = {
        safe_path = /opt/nyt/emissary/bin
    }
    
    sshkeys = {
        valid_users = [
            <%= EC2_SERVER_USERS.join(', ') %>
        ]
    }
    
<%
#  disabling for now
#  unless server.parameters['MYSQL_LOCK_PASS'].blank? 
  if false 
%>
    mysql = {
        lock_user = <%= lock_user %>
        lock_pass = <%= lock_pass %>
        lock_host = <%= lock_host %>
        data_path = <%= coordinates_file %>
    }
<% end -%>

[amqp]
    node = {
        # URI schema is: <scheme>://<user>:<pass>@<server>:<port>/<vhost>
        # scheme is either amqp (non-ssl) or amqps (ssl)
        URI = <%= account.messaging_url -%>
        
        # Account: <%= account.name %> [<%= account_id %>]
        # Cluster: <%= cluster.name %> [<%= cluster_id %>]
        # Server: <%=  server.name %> [<%= server_id %>]

        # all routing keys are based on <RouteType>.<Account ID>.<Cluster ID>.<Server Id>.<Instance ID>
        
        subscriptions = [
            request.<%= request_path[0,1].join('.') %>:topic
            request.<%= request_path[0,2].join('.') %>:topic
            request.<%= request_path[0,3].join('.') %>:topic
            request.<%= request_path[0,3].join('.') -%>.__ID_INSTANCE_ID__:topic
        ]
        
        startup  = startup.<%= request_path[0,3].join('.') -%>.__ID_INSTANCE_ID__:topic
        shutdown = shutdown.<%= request_path[0,3].join('.') -%>.__ID_INSTANCE_ID__:topic
        
        stats    = {
            interval = 300
            queue_base = info.stat.<%= request_path[0,3].join('.') -%>.__ID_INSTANCE_ID__:topic
        }

        # no stats for the time being
        disable = [ stats ]
    }

